@import "../../styles/theme";
@import "../../styles/mixin";

.editor {
  min-height: 400px;
}

:global {

  // stylelint-disable selector-class-pattern
  .ProseMirror-focused:focus {
    outline: none;
  }

  .ProseMirror {
    @include editable;

    min-height: inherit;
    font-size: var(--font);


    p.is-editor-empty:first-child::before {
      pointer-events: none;
      content: attr(data-placeholder);

      float: left;

      height: 0;

      color: var(--text1);
    }

    // Placeholder
    p.is-empty,
    h1.is-empty,
    h2.is-empty,
    h3.is-empty,
    h4.is-empty {
      &::before {
        pointer-events: none;
        content: attr(data-placeholder);

        float: left;

        height: 0;

        color: var(--text1);
      }
    }

    // List
    ul[data-type="taskList"] {
      list-style: none;

      li {
        display: flex;
        gap: var(--spc);
        margin-left: 0;

        >label {
          user-select: none;
          flex: 0 0 auto;
          margin-right: 0.5rem;
        }

        >div {
          flex: 1 1 auto;
        }

        ul {
          margin-bottom: 0;
        }
      }
    }

    // Table
    .tableWrapper {
      overflow-x: auto;
      padding: 1rem 0;
    }

    table {
      .selectedCell::after {
        pointer-events: none;
        content: "";

        position: absolute;
        z-index: 2;
        inset: 0;

        background: rgba($gray-44, 0.4);
      }

      .column-resize-handle {
        pointer-events: none;
        cursor: row-resize;

        position: absolute;
        top: 0;
        right: -2px;
        bottom: -2px;

        width: 4px;

        background-color: #adf;
      }
    }

    .resize-cursor {
      cursor: ew-resize;
      cursor: col-resize;
    }

    >img {
      image-orientation: none;
    }

    p {
      margin-bottom: var(--spc-l);
    }
  }


  // stylelint-enable selector-class-pattern
}
