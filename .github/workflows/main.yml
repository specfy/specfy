name: Main
on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize]

jobs:
  ci:
    container: node:18.17.1
    runs-on: ubuntu-latest
    timeout-minutes: 15
    services:
      postgres:
        image: postgres:15.4-alpine
        env:
          POSTGRES_PASSWORD: postgres
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

      elasticsearch:
        image: elasticsearch:8.10.2
        env:
          http.publish_host: 127.0.0.1
          transport.host: 127.0.0.1
          xpack.security.enabled: false
          indices.id_field_data.enabled: true
          bootstrap.memory_lock: true
          discovery.type: single-node
        options: >-
          --health-cmd "curl http://127.0.0.1:9200/_cluster/health"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
        # <port on host>:<port on container>
        - 9200:9200

      redis:
        image: redis
        options: --entrypoint redis-server

    env:
      DATABASE_URL: "postgres://postgres:postgres@postgres:5432/postgres?sslmode=disable"
      COOKIE_SECRET: "00d0ab4f7738a83feb37f661526512063c41e49278b7c32cba87314269a5788b"
      PASSWORD_SALT: "erejlksfjgfsd"
      GITHUB_CLIENT_APPID: 1
      GITHUB_CLIENT_ID: "RANDOM"
      GITHUB_CLIENT_SECRET: "RANDOM"
      GITHUB_CLIENT_PKEY: "__empty__"
      GITHUB_WEBHOOKS_SECRET: "secret"
      APP_HOSTNAME: "http://localhost:5173"
      API_HOSTNAME: "http://localhost:3000"
      DEFAULT_ACCOUNT: ""
      GIVE_DEFAULT_PERMS_TO_EMAIL: ""
      RESEND_KEY: "re_"
      STRIPE_KEY: "RANDOM"
      STRIPE_WEBHOOKS_SECRET: "RANDOM"
      JWT_SECRET: "aa"
      DD_API_KEY: ""
      OPENAI_KEY: ""
      ELASTICSEARCH_HOST: "http://127.0.0.1:9200"
      ELASTICSEARCH_USER: ""
      ELASTICSEARCH_PWD: ""


    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Build
        run: npm run build

      - name: Migrate
        run: npm run db:migrate

      # Not running test in parallel for readability
      - name: Run Test API
        run: npm run test:ci

      - name: Coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}

      # Send bundle stats and build information to RelativeCI
      - name: Send bundle stats to RelativeCI
        uses: relative-ci/agent-action@v2
        with:
          webpackStatsFile: ./pkgs/app/dist/webpack-stats.json
          key: ${{ secrets.RELATIVE_CI_KEY }}
          token: ${{ secrets.PERSONAL_GITHUB_TOKEN }}
