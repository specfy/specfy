name: Main
on:
  push:
    branches: [ main ]
  pull_request:
    types: [opened, synchronize]

jobs:
  ci:
    container: node:20.5.0
    runs-on: ubuntu-latest
    timeout-minutes: 10
    services:
      postgres:
        env:
          POSTGRES_PASSWORD: postgres
        image: postgres:15.3-alpine
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5

    env:
      DATABASE_URL: "postgres://postgres:postgres@postgres:5432/postgres?sslmode=disable"
      COOKIE_SECRET: "00d0ab4f7738a83feb37f661526512063c41e49278b7c32cba87314269a5788b"
      PASSWORD_SALT: "erejlksfjgfsd"
      GITHUB_CLIENT_APPID: 1
      GITHUB_CLIENT_ID: ""
      GITHUB_CLIENT_SECRET: ""
      GITHUB_CLIENT_PKEY: "__empty__"
      GITHUB_WEBHOOKS_SECRET: "secret"
      APP_HOSTNAME: "http://localhost:3000"
      API_HOSTNAME: "http://localhost:3000"
      DEFAULT_ACCOUNT: ""
      GIVE_DEFAULT_PERMS_TO_EMAIL: ""
      RESEND_KEY: "re_"



    steps:
      - name: Check out repository code
        uses: actions/checkout@v3

      - name: Install Node
        uses: actions/setup-node@v3
        with:
          node-version-file: .nvmrc
          cache: 'npm'
          cache-dependency-path: |
            package-lock.json
            pkgs/app/package-lock.json
            pkgs/api/package-lock.json
            pkgs/website/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Lint
        run: npm run lint

      - name: Migrate
        run: cd pkgs/api/ && npm run migrate

      - name: Build Email
        run: cd pkgs/emails/ && npm run build

      - name: Build API
        run: cd pkgs/api/ && npm run test:build

      - name: Run Test API
        run: cd pkgs/api/ && npm run test

      - name: Run Test APP
        run: cd pkgs/app/ && npm run test

      - name: Coverage
        uses: codecov/codecov-action@v3
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          files: ./pkgs/api/coverage/cobertura-coverage.xml,./pkgs/app/coverage/cobertura-coverage.xml


      - name: Build APP
        run: cd pkgs/app/ && npm run build

